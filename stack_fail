#pragma config(Sensor, port2,  bumper,         sensorVexIQ_Touch)
#pragma config(Sensor, port3,  colour,         sensorVexIQ_Color12Color)
#pragma config(Motor,  motor1,          left,          tmotorVexIQ, PIDControl, driveLeft, encoder)
#pragma config(Motor,  motor6,          right,         tmotorVexIQ, PIDControl, reversed, driveRight, encoder)
#pragma config(Motor,  motor10,         lift,          tmotorVexIQ, PIDControl, encoder)
#pragma config(Motor,  motor11,         claw,          tmotorVexIQ, PIDControl, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

task main()
{
	int count = 0;
	while(count != 3)
	{
		setMultipleMotors(50, left, right);
		while(count == 0)
		{
			while((getColorName(colour) == colorGreen)||(getColorName(colour) == colorRed))
			{
				forward(180, degrees, 50);
				moveMotor(claw, 90, degrees, 50);
				moveMotor(lift, 3, rotations, 50);
				moveMotor(claw, 90, degrees, -50);
				moveMotor(lift, 3, rotations, -50);
				count+=1;
			}
		}
		while(count == 1)
		{
			setMultipleMotors(50, left, right);
			while((getColorName(colour) == colorGreen)||(getColorName(colour) == colorRed))
			{
				forward(180, degrees, 50);
				moveMotor(claw, 90, degrees, 50);
				moveMotor(lift, 2, rotations, 50);
				count+=1;
			}
		}
		while(count == 2)
		{
			setMultipleMotors(50, left, right);
			if(getBumperValue(bumper) == 1)
			{
				moveMotor(lift, 1, rotations, -50);
				moveMotor(claw, 90, degrees, -50);
				moveMotor(lift, 2, rotations, 50);
				moveMotor(claw, 90, degrees, 50);
				moveMotor(lift, 3, rotations, -100);
				count+=1;
			}
		}
	}
}
